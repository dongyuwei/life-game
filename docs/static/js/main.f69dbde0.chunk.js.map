{"version":3,"sources":["life_game.js","Game.js","App.js","index.js"],"names":["Cell","state","row","column","Object","classCallCheck","this","lives","initGrid","rows","columns","grid","initState","i","j","Math","random","LifeGame","previousGrid","nextGrid","cell","setNextState","getAliveNeighbors","x","y","Game","props","_this","possibleConstructorReturn","getPrototypeOf","call","start","clearInterval","timer","liveCells","setState","lifeGame","initRandomly","continue","pause","setInterval","iterateOneStep","interval","game","iterate","cellEl","tableCells","dataset","toString","className","next","reset","initWithDeadCells","setIterationInterval","e","target","value","nextProps","nextState","nextContext","_this2","react_default","a","createElement","onClick","onChange","placeholder","map","key","id","concat","data-state","toggleCellState","ref","el","Component","App","src_Game","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f69dbde0.chunk.js","sourcesContent":["class Cell {\n  constructor(state, row, column) {\n    this.state = state; // 0: death, 1: live\n    this.row = row;\n    this.column = column;\n  }\n\n  setNextState(lives) {\n    if (this.state === 0) {\n      if (lives === 3) {\n        this.state = 1;\n      }\n    } else {\n      if (lives >= 4 || lives <= 1) {\n        this.state = 0;\n      }\n    }\n  }\n}\n\nclass LifeGame {\n  constructor(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.grid = [];\n  }\n\n  initRandomly() {\n    return initGrid(this.rows, this.columns, this.grid);\n  }\n\n  initWithDeadCells() {\n    return initGrid(this.rows, this.columns, this.grid, 0);\n  }\n\n  iterate() {\n    const rows = this.rows;\n    const columns = this.columns;\n    const previousGrid = this.grid;\n    const nextGrid = [];\n    for (var i = 0; i < rows; i++) {\n      nextGrid[i] = [];\n      for (var j = 0; j < columns; j++) {\n        const cell = new Cell(previousGrid[i][j].state, i, j);\n        cell.setNextState(\n          this.getAliveNeighbors(previousGrid, i, j, cell.state)\n        );\n        nextGrid[i][j] = cell;\n      }\n    }\n    this.grid = nextGrid;\n    return nextGrid;\n  }\n\n  getAliveNeighbors(grid, x, y, state) {\n    let lives = 0;\n    for (var i = -1; i <= 1; i++) {\n      for (var j = -1; j <= 1; j++) {\n        if (grid[x + i] && grid[x + i][y + j]) {\n          lives = lives + grid[x + i][y + j].state;\n        }\n      }\n    }\n    return lives - state;\n  }\n}\n\nfunction initGrid(rows, columns, grid, initState) {\n  for (var i = 0; i < rows; i++) {\n    grid[i] = grid[i] || [];\n    for (var j = 0; j < columns; j++) {\n      const state = initState === 0 ? initState : random0or1();\n      grid[i][j] = new Cell(state, i, j);\n    }\n  }\n  return grid;\n}\n\nfunction random0or1() {\n  return Math.random() > 0.5 ? 1 : 0;\n}\n\nexport default LifeGame;\n","import React, { Component } from 'react';\nimport LifeGame from './life_game.js';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.interval = props.interval;\n    this.lifeGame = new LifeGame(props.rows, props.columns);\n    this.tableCells = [];\n    for (var i = 0; i < props.rows; i++) {\n      this.tableCells[i] = [];\n    }\n\n    this.state = {\n      grid: this.lifeGame.initWithDeadCells(),\n      liveCells: 0,\n    };\n  }\n\n  start = () => {\n    clearInterval(this.timer);\n    if (this.state.liveCells === 0) {\n      this.setState(\n        {\n          grid: this.lifeGame.initRandomly(),\n        },\n        () => {\n          this.continue();\n        }\n      );\n    } else {\n      this.continue();\n    }\n  };\n\n  pause = () => {\n    clearInterval(this.timer);\n  };\n\n  continue = () => {\n    clearInterval(this.timer);\n\n    this.timer = setInterval(() => {\n      this.iterateOneStep();\n    }, this.interval);\n  };\n\n  iterateOneStep = () => {\n    const game = this.lifeGame;\n    const grid = game.iterate();\n    const rows = game.rows;\n    const columns = game.columns;\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        const cellEl = this.tableCells[i][j];\n        const cell = grid[i][j];\n        if (cellEl.dataset.state !== grid[i][j].state.toString()) {\n          cellEl.className = cell.state === 1 ? 'live' : 'dead';\n          cellEl.dataset.state = cell.state;\n        }\n      }\n    }\n  };\n\n  next = () => {\n    this.iterateOneStep();\n  };\n\n  reset = () => {\n    clearInterval(this.timer);\n    this.setState(\n      {\n        grid: this.lifeGame.initWithDeadCells(),\n        liveCells: 0,\n      },\n      () => {\n        this.iterateOneStep();\n      }\n    );\n  };\n\n  setIterationInterval = (e) => {\n    this.interval = e.target.value;\n    this.continue();\n  };\n\n  toggleCellState(cell) {\n    cell.state = cell.state === 0 ? 1 : 0;\n\n    this.setState({\n      liveCells: this.state.liveCells + cell.state,\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return false;\n  }\n  render() {\n    const { grid } = this.state;\n    return (\n      <div>\n        <div className='controls'>\n          <button onClick={this.start}>start</button>\n          <button onClick={this.next}>next</button>\n          <button onClick={this.pause}>pause</button>\n          <button onClick={this.continue}>continue</button>\n          <button onClick={this.reset}>reset</button>\n          <input\n            onChange={this.setIterationInterval}\n            placeholder='设置迭代速度（迭代间隔）'\n          />\n        </div>\n\n        <table className='gameGrid'>\n          <tbody>\n            {grid.map((rows, i) => {\n              return (\n                <tr key={i}>\n                  {rows.map((cell, j) => {\n                    return (\n                      <td\n                        id={`cell-${i}-${j}`}\n                        data-state={cell.state}\n                        key={j}\n                        onClick={(e) => {\n                          this.toggleCellState(cell);\n                        }}\n                        className={cell.state === 1 ? 'live' : 'dead'}\n                        ref={(el) => {\n                          this.tableCells[i][j] = el;\n                        }}\n                      />\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport \"./App.css\";\nimport Game from \"./Game.js\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Game rows={60} columns={100} interval={200} />\n      <div>人生代代无穷已，江月年年只相似。</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}